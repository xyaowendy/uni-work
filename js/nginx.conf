user www www;
worker_processes  1;
events {
	worker_connections  1024;
}

http {
	include            mime.types;
	default_type       application/octet-stream;
	sendfile           on;
	keepalive_timeout  65;

	access_log         /var/log/nginx/access.log;
	error_log          /var/log/nginx/error.log;

	# log remote address rather than proxy address
	set_real_ip_from   172.23.83.250/31;
	set_real_ip_from   172.23.91.250/31;
	set_real_ip_from   172.23.99.250/31;
	set_real_ip_from   172.23.107.250/31;
	set_real_ip_from   172.23.115.250/31;
	set_real_ip_from   172.23.119.250/31;
	set_real_ip_from   172.23.123.250/31;
	set_real_ip_from   172.23.127.250/31;
	real_ip_header     X-Real-IP;

	# access control config
	map $uri $acl {
		# by default, we only allow any authenticated user.
		# to make the whole site public, comment out the next line and
		# uncomment the one below it
		default "allow:user:*";
		#default "allow:*";

		# phpmyadmin single sign-on will automatically log anyone
		# who is allowed by this ACL in as "root"
		~^/phpmyadmin/ "allow:user:*local, allow:group:'eait:itig'";

		# example: protect the private_files directory
		#~^/private_files/ "allow:user:uquser1, allow:group:'uq:UQ_ldap_group'";

		# example: make the /public directory public
		#~^/public/ "allow:*";

		# sometimes browsers get confused if favicon.ico redirects, so make
		# it always public.
		/favicon.ico "allow:*";
	}

	server {
		server_name _;

		# use https by default
		location / {
			rewrite ^ https://$http_host$request_uri? permanent;
		}
	}

	server {
		listen 443;
		server_name  _;
		root         /var/www/htdocs;

		port_in_redirect off;

		# pretend we got the request over https
		set $ssl on;

		include "set_cookie.conf";
		rewrite_by_lua_file "share/lua/5.1/auth_filter.lua";

		location / {
			# comment this out to use @dflapp
			index  index.html index.htm index.php index.jsp;
			try_files $uri $uri/ =404;

			# uncomment this to use @dflapp
			#try_files $uri @dflapp;
		}

		location @dflapp {
			# uncomment this for jsp/tomcat to handle unknown URIs
			#proxy_pass http://127.0.0.1:8080;

			# uncomment this for uwsgi to handle unknown URIs
			#uwsgi_pass unix:///tmp/uwsgi.sock;
			#include uwsgi_params;

			# uncomment this for unicorn_rails to handle unknown URIs
			#proxy_pass http://unix:/tmp/unicorn.sock;
		}

		# add any application server sections you want here
		location /phpmyadmin {
			alias /var/www/phpmyadmin;
			try_files $uri $uri/ =404;
			index index.php;
			location ~ /phpmyadmin(/.*\.php)$ {
				set $script $1;
				location ~ \..*/.*\.php$ {return 404;}
				include fastcgi_params;
				fastcgi_param HTTPS on;
				fastcgi_index index.php;
				fastcgi_param SCRIPT_FILENAME $document_root$script;
				fastcgi_pass unix:/var/run/php-fpm.sock;
			}
		}

		location ~ \.php$ {
			location ~ \..*/.*\.php$ {return 404;}
			include fastcgi.conf;
			fastcgi_pass unix:/var/run/php-fpm.sock;
		}

		location ~ \.jsp$ {
			proxy_pass http://127.0.0.1:8080;
		}

		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   share/examples/nginx/html;
		}
	}
}

